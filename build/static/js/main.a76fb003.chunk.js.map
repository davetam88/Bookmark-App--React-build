{"version":3,"sources":["BookmarksContext.js","config.js","AddBookmark/AddBookmark.js","Rating/Rating.js","BookmarkItem/BookmarkItem.js","BookmarkList/BookmarkList.js","Nav/Nav.js","App.js","index.js"],"names":["BookmarksContext","React","createContext","bookmarks","addBookmark","deleteBookmark","config","API_ENDPOINT","API_KEY","process","Required","react_default","a","createElement","className","AddBookmark","state","error","handleSubmit","e","preventDefault","_e$target","target","title","url","description","rating","bookmark","value","_this","setState","fetch","method","body","JSON","stringify","headers","content-type","authorization","concat","then","res","ok","json","data","context","props","history","push","catch","handleClickCancel","this","onSubmit","role","message","htmlFor","AddBookmark_Required","type","name","id","placeholder","required","defaultValue","min","max","onClick","Component","contextType","defaultProps","Rating","console","log","stars","map","_","i","key","BookmarkItem","src_BookmarksContext","Consumer","href","rel","bookmarkId","callback","onClickDelete","BookmarkList","aria-live","BookmarkItem_BookmarkItem","Object","assign","Nav","Link","to","App","setBookmarks","toConsumableArray","newBookmarks","filter","bm","_this2","Authorization","Error","status","contextValue","src_BookmarkList_BookmarkList","b","Provider","Route","path","component","exact","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a76fb003.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n//  new,, d - rr28a - new file, create context; setup data and shapes.\r\nconst BookmarksContext = React.createContext({\r\n  bookmarks: [],\r\n  addBookmark: () => { },\r\n  deleteBookmark: () => { },\r\n})\r\n\r\nexport default BookmarksContext\r\n\r\n","export default {\n  API_ENDPOINT: `https://tf-ed-bookmarks-api.herokuapp.com/v3/bookmarks`,\n  API_KEY: process.env.REACT_APP_API_KEY\n}\n\n\n","//  new,, rr28a  - AddBookmark.js  - replace prom with contexta *******\nimport React, { Component } from 'react';\n// import { withRouter } from 'react-router-dom';\n//  new,, rr28a  import BookmarksContext : use context (for history)\nimport BookmarksContext from '../BookmarksContext';\nimport config from '../config'\nimport './AddBookmark.css';\n\n// new,, rr28a -  prop type check  immport\nimport PropTypes from 'prop-types';\n\n// ??? why it has to be in this type of syntax ? it's just a subroutinte kinad of thinkg ? \nconst Required = () => (\n  <span className='AddBookmark__required'>*</span>\n)\n\nclass AddBookmark extends Component {\n  // static defaultProps = {\n  //   onAddBookmark: () => { }\n  // };\n  //  new,, rr28a  use context not prop. : only prop need default \n  static contextType = BookmarksContext;\n\n  state = {\n    error: null,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault()\n    // get the form fields from the event\n    const { title, url, description, rating } = e.target\n    const bookmark = {\n      title: title.value,\n      url: url.value,\n      description: description.value,\n      rating: rating.value,\n    }\n    this.setState({ error: null })\n    fetch(config.API_ENDPOINT, {\n      method: 'POST',\n      body: JSON.stringify(bookmark),\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer ${config.API_KEY}`\n      }\n    })\n      .then(res => {\n        if (!res.ok)\n        {\n          // get the error message from the response,\n          return res.json().then(error => {\n            // then throw it\n            throw error\n          })\n        }\n        return res.json()\n      })\n      .then(data => {\n        title.value = ''\n        url.value = ''\n        description.value = ''\n        rating.value = ''\n        //  new,, rr28a  swap out props with context\n        // this.props.onAddBookmark(data)\n        this.context.addBookmark(data)\n        this.props.history.push('/')\n      })\n      .catch(error => {\n        this.setState({ error })\n      })\n  }\n\n  //  new,, rr28a  new handle cancel button., use route history in this.props.\n  handleClickCancel = () => {\n    this.props.history.push('/')\n  };\n\n\n  render() {\n    const { error } = this.state\n    //    const { onClickCancel } = this.props\n    return (\n      <section className='AddBookmark'>\n        <h2>Create a bookmark</h2>\n        {/* new,, rr28a - add distance callback */}\n        <form\n          className='AddBookmark__form'\n          onSubmit={this.handleSubmit}\n        >\n          <div className='AddBookmark__error' role='alert'>\n            {error && <p>{error.message}</p>}\n          </div>\n          <div>\n            <label htmlFor='title'>\n              Title\n              {' '}\n              <Required />\n            </label>\n            <input\n              type='text'\n              name='title'\n              id='title'\n              placeholder='Great website!'\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor='url'>\n              URL\n              {' '}\n              <Required />\n            </label>\n            <input\n              type='url'\n              name='url'\n              id='url'\n              placeholder='https://www.great-website.com/'\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor='description'>\n              Description\n            </label>\n            <textarea\n              name='description'\n              id='description'\n            />\n          </div>\n          <div>\n            <label htmlFor='rating'>\n              Rating\n              {' '}\n              <Required />\n            </label>\n            <input\n              type='number'\n              name='rating'\n              id='rating'\n              defaultValue='1'\n              min='1'\n              max='5'\n              required\n            />\n          </div>\n          <div className='AddBookmark__buttons'>\n            {/* new,, d - rr28a  - replace oclick to context not prop cb */}\n            {/* <button type='button' onClick={onClickCancel}> */}\n            <button type='button' onClick={this.handleClickCancel}>\n              Cancel\n            </button>\n            {' '}\n            <button type='submit'>\n              Save\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\n// new,, rr28a -  prop type check \n\nAddBookmark.propTypes = {\n  title: PropTypes.string.isRequired,\n  // url: PropTypes.string.isRequired,\n  url: (props, propName, componentName) => {\n    // get the value of the prop\n    const prop = props[propName];\n\n    // do the isRequired check\n    if (!prop)\n    {\n      return new Error(`${propName} is required in ${componentName}. Validation Failed`);\n    }\n\n    // check the type\n    if (typeof prop != 'string')\n    {\n      return new Error(`Invalid prop, ${propName} is expected to be a string in ${componentName}. ${typeof prop} found.`);\n    }\n\n    // do the custom check here\n    // using a simple regex\n    if (prop.length < 5 || !prop.match(new RegExp(/^https?:\\/\\//)))\n    {\n      return new Error(`Invalid prop, ${propName} must be min length 5 and begin http(s)://. Validation Failed.`);\n    }\n  },\n  rating: PropTypes.number,\n  description: PropTypes.string,\n}\n\n// And we can add defaultProps too:\nAddBookmark.defaultProps = {\n  rating: 1,\n  description: \"\"\n};\n\nexport default AddBookmark;\n","import React from 'react';\n// new,, rr28a -    import proptype\n//import PropTypes from 'prop-types';\n\nexport default function Rating(props) {\n  console.log(`props :>> `, props); // dbg..\n\n  const stars = [0, 0, 0, 0, 0]\n    .map((_, i) => i < props.value\n      // new,, rr28a - test out the prop value by take out check\n      // (i < props.value)\n      ? <span key={i}>&#9733; </span>\n      : <span key={i}>&#9734; </span>\n    );\n  return (\n    <div className=\"rating\">\n      {stars}\n    </div>\n  );\n}\n\n// new,, rr28a - proptyep  validators  for rating, chekc nubmer and rquiired.\nRating.propTypes = {\n  value: (props, propName, componentName) => {\n    // first get the value of the prop\n    const prop = props[propName];\n\n    // ww..1\n    // since we want to make this required let us check that first\n    if (!prop)\n    {\n      return new Error(`${propName} is required in ${componentName}. Validation Failed`);\n    }\n    // value is required in Rating.Validation Failed\n\n    // the prop has a value let's check the type\n    if (typeof prop != 'number')\n    {\n      return new Error(`Invalid prop, ${propName} is expected to be a number in ${componentName}. ${typeof prop} found.`);\n    }\n    // Invalid prop, value is expected to be a number in Rating.string found.\n\n    // the prop is a number let us check the range\n    if (prop < 1 || prop > 5)\n    {\n      return new Error(`Invalid prop, ${propName} should be in range 1 - 5 in ${componentName}. ${prop} found.`);\n    }\n    // Invalid prop, value should be in range 1 - 5 in Rating. 9 found.\n  }\n};\n\n// new,, rr28a - no error with <rating /> if defaultProps is added.\nRating.defaultProps = {\n  value: 1\n};\n\n\n","//  new,, rr28a  file..BookmarksContext.js\nimport React from 'react';\nimport Rating from '../Rating/Rating';\n//  new,, rr28a  - add this : api end points  from config file.\nimport config from '../config';\n//  new,, rr28a  -  import context file \nimport BookmarksContext from '../BookmarksContext';\nimport './BookmarkItem.css';\n\n// new,, rr28a  - add the new delete request function\nfunction deleteBookmarkRequest(bookmarkId, callback) {\n  fetch(config.API_ENDPOINT + `/${bookmarkId}`, {\n    method: 'DELETE',\n    headers: {\n      'authorization': `bearer ${config.API_KEY}`\n    }\n  })\n    .then(res => {\n      if (!res.ok)\n      {\n        // get the error message from the response,\n        return res.json().then(error => {\n          // then throw it\n          throw error\n        })\n      }\n      return res.json()\n    })\n    .then(data => {\n      // call the callback when the request is successful\n      // this is where the App component can remove it from state\n      callback(bookmarkId)\n    })\n    .catch(error => {\n      console.error(error)\n    })\n}\n\n\nexport default function BookmarkItem(props) {\n\n  return (\n    //  new,, d - rr28a  add context consumer tag \n    <BookmarksContext.Consumer>\n      {(context) => (\n        <li className='BookmarkItem'>\n          <div className='BookmarkItem__row'>\n            {/* book title and rating */}\n            <h3 className='BookmarkItem__title'>\n              <a\n                href={props.url}\n                target='_blank'\n                rel='noopener noreferrer'>\n                {props.title}\n              </a>\n            </h3>\n            <Rating value={props.rating} />\n          </div>\n          <p className='BookmarkItem__description'>\n            {props.description}\n          </p>\n          {/* ww..1 */}\n          <div className='BookmarkItem__buttons'>\n            <button\n              className='BookmarkItem__description'\n              // onClick={() => props.onClickDelete(props.id)}\n              onClick={() => {\n                deleteBookmarkRequest(\n                  props.id,\n                  context.deleteBookmark,\n                )\n              }}\n            >\n              Delete\n        </button>\n          </div>\n        </li>\n      )}\n    </BookmarksContext.Consumer>\n  )\n}\n\nBookmarkItem.defaultProps = {\n  onClickDelete: () => { },\n}\n","//  new,, rr28a  file - BookmarkList.js\nimport React, { Component } from 'react';\n//  new,, rr28a swap out prop with context, import BookmarksContext\nimport BookmarksContext from '../BookmarksContext';\nimport BookmarkItem from '../BookmarkItem/BookmarkItem';\nimport './BookmarkList.css'\n\n// new,, rr28a - proptype check for array\nimport PropTypes from 'prop-types';\n\nclass BookmarkList extends Component {\n  //  new,, rr28a  add the contextr type , note static\n  // ??? maybe not needed, not see it use here.\n  static contextType = BookmarksContext;\n\n\n  static defaultProps = {\n    bookmarks: []\n  };\n\n  render() {\n    //  new,, d- rr28a swap out prop with context, import\n    // const { bookmarks } = this.props\n    const { bookmarks } = this.context\n    // once this is added the book list shows up <<\n\n    return (\n      <section className='BookmarkList'>\n        <h2>Your bookmarks</h2>\n        <ul className='BookmarkList__list' aria-live='polite'>\n          {bookmarks.map(bookmark =>\n            <BookmarkItem\n              key={bookmark.id}\n              {...bookmark}\n            />\n          )}\n        </ul>\n      </section>\n    );\n  }\n}\n\n// new,, rr28a - proptype\nBookmarkList.propTypes = {\n  bookmarks: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default BookmarkList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Nav(props) {\n  return (\n    <nav className='Nav'>\n      <Link to={'/'}>\n        Bookmark List\n      </Link>\n      {' '}\n      <Link to={'/add-bookmark'}>\n        Add Bookmark\n      </Link>\n    </nav>\n  );\n}\n","//  new,, rr28a file App.js Context \nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport AddBookmark from './AddBookmark/AddBookmark';\n//  new,, rr28a  imprt BookmarksContext \nimport BookmarksContext from './BookmarksContext';\nimport BookmarkList from './BookmarkList/BookmarkList';\nimport Nav from './Nav/Nav';\nimport config from './config';\nimport './App.css';\n\nimport Rating from './Rating/Rating';\n\n\n\nclass App extends Component {\n\n  // ??? why change to array ? not just boomarks \n  state = {\n    // new,, rr28a  change form bookmarks to array. in state\n    // - bookmarks,\n    bookmarks: [],\n    error: null,\n  };\n\n  // init.\n  setBookmarks = bookmarks => {\n    console.log(`b4 this.state.bookmarks :>> `, this.state.bookmarks); // dbg.\n    console.log(`cb bookmarks :>> `, bookmarks); // dbg..\n    this.setState({\n      bookmarks,\n      error: null,\n    })\n    console.log(`after this.state.bookmarks :>> `, this.state.bookmarks); // dbg.\n  }\n\n  addBookmark = bookmark => {\n    console.log(`---IN addBookmark cb`); // dbg..\n    console.log(`before this.state.bookmarks :>> `, this.state.bookmarks); // dbg.\n    this.setState({\n      bookmarks: [...this.state.bookmarks, bookmark],\n    })\n\n  }\n\n  // CB use to override the empty deleteBookmark function in context.\n  deleteBookmark = bookmarkId => {\n    const newBookmarks = this.state.bookmarks.filter(bm =>\n      bm.id !== bookmarkId\n    )\n    this.setState({\n      bookmarks: newBookmarks\n    })\n  }\n\n\n  componentDidMount() {\n    console.log(`this.state.bookmarks :>> `, this.state.bookmarks); // dbg..\n    fetch(config.API_ENDPOINT, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': `Bearer ${config.API_KEY}`\n      }\n    })\n      .then(res => {\n        if (!res.ok)\n          throw new Error(res.status)\n        return res.json()\n      })\n      // bookmark response from api\n      // .then(this.setBookmarks)\n      .then(res => {\n        this.setBookmarks(res)\n      })\n\n      .catch(error => this.setState({ error }))\n  }\n\n  render() {\n    console.log(`render app`); // dbg..\n\n    //  new,, rr28a  change  - \n\n    // const { bookmarks } = this.state\n    const contextValue = {\n      //  new,, rr28a  add bookmark and delte bookmaker  here - \n      bookmarks: this.state.bookmarks,\n      addBookmark: this.addBookmark,\n      deleteBookmark: this.deleteBookmark,\n    }\n\n    return (\n      <main className='App'>\n        <h1>Bookmarks!</h1>\n        <BookmarkList bookmarks={[{ a: 2, b: 4 }, { a: 9, b: 12 }]} />\n        {/* <BookmarkList bookmarks={[1, 2, 3, 4, 5]} /> */}\n        {/* <Rating value=\"hello\" /> */}\n        <Rating value={9} />\n\n\n        {/*         \n        <Nav />\n        <div className='content' aria-live='polite'>\n           */}\n\n        {/* new,, rr28a added BookmarksContext.Provider tag */}\n        <BookmarksContext.Provider value={contextValue}>\n          <Nav />\n          <div className='content' aria-live='polite'>\n\n            {/* add form */}\n            <Route\n              path='/add-bookmark'\n\n              // new,, rr28a  swap out the addBookmark 'render callback prop' for the more simple component approach to routing.\n\n              // render={({ history }) => {\n              //   return <AddBookmark\n              //     onAddBookmark={this.addBookmark}\n              //     onClickCancel={() => history.push('/')}\n              //   />\n              // }}\n              component={AddBookmark}\n\n            />\n            <Route\n              exact\n              path='/'\n              component={BookmarkList}\n            // cur..\n            //  new,, d - rr28a  swap out render with simple component for bmlist \n            // render={({ history }) => {\n            //   return <BookmarkList bookmarks={bookmarks} />\n            // }}\n\n            />\n          </div>\n        </BookmarksContext.Provider>\n      </main >\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nconsole.log(process.env)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}